ᐅpoly(x, 4, [4,7,0, 0, 9]) -> poliniomio 4 + 7X + 9X^4


ᐅ Operatori

'+'(X, Y) = sum(Y , poly(x, 0, [X]))
  if integer(X),
  isPoly(Y)

'+'(X, Y) = sum(X , poly(x, 0, [Y]))
  if integer(Y),
  isPoly(X)

'+'(X, Y) = sum(X, Y) if isPoly(X), isPoly(Y)

'*'(X, Y) = prod(Y , poly(x, 0, [X]))
  if integer(X),
  isPoly(Y)

'*'(X, Y) = prod(X , poly(x, 0, [Y]))
  if integer(Y),
  isPoly(X)

'*'(X, Y) = prod(X, Y) if isPoly(X), isPoly(Y)

isPoly(X) = true if X = poly(Var, Grad, Lista)


sum(poly(x, GradoX, ListaX), poly(x, GradoY, ListaY)) = 
    poly(x, MaxGrado, SommaListe) if
        MaxGrado = max(GradoX, GradoY),
        ListaXEstesa = extend(ListaX, MaxGrado + 1),
        ListaYEstesa = extend(ListaY, MaxGrado + 1),
        SommaListe = sumLists(ListaXEstesa, ListaYEstesa)

extend(Lista, Len) = Lista if length(Lista) = Len
extend(Lista, Len) = extend([0 | Lista], Len) if length(Lista) < Len

sumLists([], []) = []
sumLists([H1 | T1], [H2 | T2]) = [H1 + H2 | sumLists(T1, T2)]

max(X, Y) = X if X > Y
max(X, Y) = Y if Y > X
max(X, Y) = X if X = Y


prod(poly(x, GradoX, ListaX), poly(x, GradoY, ListaY)) = 
    poly(x, GradoX + GradoY, ProdottoListe) if
        LunghezzaRisultato = GradoX + GradoY + 1,
        ListaZeri = createZeros(LunghezzaRisultato),
        ProdottoListe = prodLists(ListaX, 0, ListaY, ListaZeri)

createZeros(0) = []
createZeros(N) = [0 | createZeros(N - 1)] if N > 0

prodLists([], _, _, Acc) = Acc
prodLists([H1 | T1], Exp1, Lista2, Acc) = 
    prodLists(T1, Exp1 + 1, Lista2, NuovoAcc) if
        TempAcc = prodSingleTerm(H1, Exp1, Lista2, 0, Acc),
        NuovoAcc = TempAcc

prodSingleTerm(_, _, [], _, Acc) = Acc
prodSingleTerm(Coeff1, Exp1, [H2 | T2], Exp2, Acc) = 
    prodSingleTerm(Coeff1, Exp1, T2, Exp2 + 1, NuovoAcc) if
        Prodotto = Coeff1 * H2,
        ExpTotale = Exp1 + Exp2,
        NuovoAcc = updateAtIndex(Acc, ExpTotale, Prodotto)

updateAtIndex([], _, _) = []
updateAtIndex([H | T], 0, Val) = [H + Val | T]
updateAtIndex([H | T], Idx, Val) = [H | updateAtIndex(T, Idx - 1, Val)] if Idx > 0

length([]) = 0
length([_ | T]) = 1 + length(T)


diff(poly(x, Grado, Lista)) = 
    poly(x, Grado - 1, ListaDerivata) if
        ListaDerivata = diffList(Lista, 0)

diffList([], _) = []
diffList([H | T], Exp) = 
    diffList(T, Exp + 1) if Exp = 0
diffList([H | T], Exp) = 
    [H * Exp | diffList(T, Exp + 1)] if Exp > 0