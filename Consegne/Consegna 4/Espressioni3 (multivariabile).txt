ᐅ Somma
ᐅ poly(x,[k(0,poly(y,[k(0,poly(z,[k(0,8),k(1,6)])),k(1,3)])),k(1,3),k(2,1)])

sum(poly(x, ListaX), poly(x, ListaY)) = 
    poly(x, NuovaLista) if
        NuovaLista = mergeSparseMultivar(ListaX, ListaY)

mergeSparseMultivar([], Lista) = Lista
mergeSparseMultivar(Lista, []) = Lista
mergeSparseMultivar([k(E1, C1) | T1], [k(E2, C2) | T2]) = 
    [k(E1, C1) | mergeSparseMultivar(T1, [k(E2, C2) | T2])] if E1 < E2

mergeSparseMultivar([k(E1, C1) | T1], [k(E2, C2) | T2]) = 
    [k(E2, C2) | mergeSparseMultivar([k(E1, C1) | T1], T2)] if E2 < E1

mergeSparseMultivar([k(E, poly(Var, SubListaX)) | T1], [k(E, poly(Var, SubListaY)) | T2]) = 
    [k(E, poly(Var, SommaSubListe)) | mergeSparseMultivar(T1, T2)] if
        SommaSubListe = mergeSparseMultivar(SubListaX, SubListaY)

mergeSparseMultivar([k(E, C1) | T1], [k(E, C2) | T2]) = 
    [k(E, C1 + C2) | mergeSparseMultivar(T1, T2)]

ᐅ Derivata
diff(poly(x, Lista)) = 
    poly(x, ListaDerivata) if
        ListaDerivata = diffListMultivar(Lista)

diffListMultivar([]) = []
diffListMultivar([k(0, _) | T]) = diffListMultivar(T)
diffListMultivar([k(E, C) | T]) = 
    [k(E-1, C * E) | diffListMultivar(T)] if 
        E > 0,
        integer(C)
    
diffListMultivar([k(E, poly(Var, SubLista)) | T]) = 
    [k(E-1, poly(Var, SubListaDerivata)) | diffListMultivar(T)] if
        SubListaDerivata = diffListMultivar(SubLista),
        E > 0

ᐅ Prodotto