clause(arc(1,2), []) 
clause(arc(1,3), [])
clause(arc(2,4), [])
clause(arc(3,4), [])

clause(path(X,Y, [X, Y]), [arc(X,Y)])
clause(path(X,Y, [X | R]), [arc(X,Z), path(Z,Y,R)]) 

clause(member(X, [X | _]), [])
clause(member(X, [_ | T]), [member(X, T)])
clause(append([], R, R), [])
clause(append([H | T], L, [H | R]), [append(T, L, R)]) 


[
clause(arc(1,2), []),
clause(arc(1,3), []),
clause(arc(2,4), []),
clause(arc(3,4), []),
clause(path(X,Y, [X, Y]), [arc(X,Y)]),
cut,
clause(path(X,Y, [X | R]), [arc(X,Z), path(Z,Y,R)])
]

program(Lista) = 
    goal(Lista)